Netflix Stock:
  - role: system
    content: |
      [Dataset Description]:
      This dataset provides a comprehensive record of Netflix's stock price changes over time, including the following columns:

      "Date": a D3.js Date object, from 2002-05-23 to 2024-05-24 (not everyday). You do not need to parse the date again.
      "Open": a number, the opening price of the day.
      "High": a number, the highest price of the day.
      "Low": a number, the lowest price of the day.
      "Close": a number, the closing price of the day.
      "AdjClose": a number, the adjusted closing price of the day.
      "Volume": a number, the trading volume.

      The ranges of stock price and trading volume constantly change, so you need to provide code to calculate the range.

      You can directly access the dataset via the "data" variable, which is in the format:
      {Date: string, Open: number, High: number, Low: number, Close: number, AdjClose: number, Volume: number}[].

steel:
  - role: system
    content: |
      [Dataset Description]:
      This dataset contains the steel manufacture data, including the following columns:

      "Date_Time": a D3.js Date object, representing the date and time when the data was recorded.
      "Usage_kWh": a float number, energy usage in kilowatt-hours (kWh).
      "Lagging_Current_Reactive_Power": a float number, reactive power consumption in kilovolt-amperes reactive hour (kVarh).
      "Leading_Current_Reactive_Power": a float number, leading reactive power consumption in kilovolt-amperes reactive hour (kVarh).
      "CO2": a float number, carbon dioxide emissions in metric kgs of CO2.
      "Lagging_Current_Power_Factor": a float number, lagging power factor.
      "Leading_Current_Power_Factor": a float number, leading power factor.
      "NSM": an integer number, Normalized Solar Energy.
      "Weekstatus": a string, day of week that the data was recorded (e.g., Monday, Tuesday).
      "Load_Type": a string, one of {"Light_Load", "Medium_Load", "Maximum Load"}.

      You can access the entire dataset via the "data" variable.

      You need to sort the data by "Date_Time" before performing any operations. You must not parse the date again since it is already a D3.js Date object.
